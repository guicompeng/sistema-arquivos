events {}

http {
    upstream nodejs_backend {
        server node1:3000 max_fails=2 fail_timeout=30s;
        server node2:3000 max_fails=2 fail_timeout=30s;
        server node3:3000 max_fails=2 fail_timeout=30s;
    }

    server {
        listen 80;
        
        # Configurações para upload de arquivos grandes
        client_max_body_size 100M;
        client_body_timeout 60s;
        client_header_timeout 60s;

        # Servir arquivos estáticos do frontend
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }

        # Proxy para upload de arquivos - balanceamento de carga
        location /upload {
            proxy_pass http://nodejs_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Configurações para upload
            proxy_request_buffering off;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }

        # API para listar arquivos
        location /files {
            proxy_pass http://nodejs_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # API para status dos servidores
        location /api/status {
            proxy_pass http://nodejs_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # API para status individual dos nós
        location /api/status/node1 {
            proxy_pass http://node1:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_connect_timeout 3s;
            proxy_read_timeout 3s;
        }

        location /api/status/node2 {
            proxy_pass http://node2:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_connect_timeout 3s;
            proxy_read_timeout 3s;
        }

        location /api/status/node3 {
            proxy_pass http://node3:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_connect_timeout 3s;
            proxy_read_timeout 3s;
        }

        # API para download de arquivos
        location /download/ {
            proxy_pass http://nodejs_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }

        # API para deletar arquivos
        location /delete/ {
            proxy_pass http://nodejs_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Configuração para arquivos CSS, JS e outros assets APENAS do frontend
        # Esta regra deve excluir arquivos de download da API
        location ~* ^/(?!download|delete|upload|files|api).*\.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
            root /usr/share/nginx/html;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
}
